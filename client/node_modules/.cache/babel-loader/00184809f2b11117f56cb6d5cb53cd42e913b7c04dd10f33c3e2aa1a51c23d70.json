{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raim\\\\Desktop\\\\Shop\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from \"socket.io-client\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Items from './components/Items';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //useState: Отвечает за создание и управление состоянием компонента.\n  //useRef: Создает изменяемый объект, который может использоваться для сохранения и обращения к изменяемому значению\n  //useEffect- это способ сказать компоненту: \"Когда что-то произойдет (например, компонент загрузится, обновится или удалится), сделай это.\" То, что \"это\" означает, может быть чем угодно: загрузка данных, изменение состояния\n  //Создает состояние state с начальным значением объекта\n  //setState - функция для обновления этого состояния. Обычно используется для хранения данных формы или информации, связанной с компонентом.\n  const [state, setState] = useState({\n    message: \"\",\n    name: \"\"\n  });\n  //false показывает, что процесс отправки имени еще не начат\n  const [nameSubmit, setNameSubmit] = useState(false);\n  //используется для хранения значения имени пользователя\n  const [nameUser, setNameUser] = useState(\"\");\n  //используется для хранения сообщений чата\n  const [chat, setChat] = useState([]);\n  //используется для сохранения ссылки на объект, который нужно сохранить между рендерами компонента (например, объекта сокета для взаимодействия с сервером).\n  const socketRef = useRef();\n\n  // для установки соединения с сокетом и прослушивания события \"message\" с помощью библиотеки Socket.IO \n  useEffect(() => {\n    socketRef.current = io.connect(\"http://localhost:4000\");\n    //Устанавливает слушатель события \"message\"\n    //и добавляет новое сообщение в массив чата.\n    socketRef.current.on(\"message\", ({\n      name,\n      message\n    }) => {\n      setChat([...chat, {\n        name,\n        message\n      }]);\n    });\n    //при вызове этой функции происходит отключение текущего сокета.\n    return () => socketRef.current.disconnect();\n  },\n  // реагирует на изменения состояния chat \n  [chat]);\n  const onContentChange = e => {\n    //Создается локальная переменная getNameUser, которая получает значение из переменной состояния nameUser\n    const getNameUser = nameUser;\n    //Выводит в консоль значение, введенное пользователем в элемент, который вызвал событие e.\n    console.log(e.target.value);\n    //Используется функция setState для обновления состояния. \n    setState({\n      ...state,\n      name: getNameUser,\n      message: e.target.value\n    });\n    //Выводит в консоль объект состояния state после его обновления\n    console.log(state);\n  };\n  const onMessageSubmit = e => {\n    //Деструктурирует объект состояния state, извлекая из него значения name и message. Это позволяет использовать их без прямого обращения к state.name и state.message.\n    const {\n      name,\n      message\n    } = state;\n    //Отправляет сообщение через сокет (socketRef.current) на сервер, используя событие \"message\".\n    socketRef.current.emit(\"message\", {\n      name,\n      message\n    });\n    //Вместо отправки данных или перехода по ссылке страница остается без изменений\n    e.preventDefault();\n    //Обновляет состояние state\n    setState({\n      message: \"\",\n      name\n    });\n    console.log(state);\n  };\n  //формирует интерфейс чата, отображая сообщения в соответствии с отправителем, \n  //выравнивая их по левому или правому краю в зависимости от того, от кого сообщение пришло.\n  const renderChat = () => {\n    // Каждый элемент массива содержит сообщение чата и его отправителя.\n    return chat.map(({\n      name,\n      message\n    }, index) =>\n    // тернарный оператор, который проверяет, совпадает ли имя отправителя сообщения с именем пользователя (nameUser).\n    nameUser == name ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg1 mb-2 p-2 float-right box-messenger\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-0 text-messenger text-white\",\n          children: [message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          clear: 'both'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg2 mb-2 p-2 float-left box-messenger\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-0 text-messenger\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          clear: 'both'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this));\n  };\n  const [orders, setOrders] = useState([]);\n  const [items] = useState([{\n    id: 1,\n    title: 'Композиция Desire Me',\n    img: 'choco1.jfif',\n    desc: '',\n    category: '',\n    price: '15500'\n  }, {\n    id: 2,\n    title: 'Композиция Бланш',\n    img: 'choco2.jfif',\n    desc: '',\n    category: '',\n    price: '8990'\n  }, {\n    id: 3,\n    title: 'Композиция Шоколадный Прованс',\n    img: 'choco3.jfif',\n    desc: '',\n    category: '',\n    price: '6990'\n  }, {\n    id: 4,\n    title: 'Композиция Красота Любви',\n    img: 'choco4.jfif',\n    desc: '',\n    category: '',\n    price: '11000'\n  }, {\n    id: 5,\n    title: 'Композиция Вдохновение',\n    img: 'choco5.jfif',\n    desc: '',\n    category: '',\n    price: '5990'\n  }, {\n    id: 6,\n    title: 'Композиция Клубничный Сюрприз',\n    img: 'choco6.jfif',\n    desc: '',\n    category: '',\n    price: '8000'\n  }, {\n    id: 7,\n    title: 'Композиция Вояж',\n    img: 'choco7.jfif',\n    desc: '',\n    category: '',\n    price: '11990'\n  }, {\n    id: 8,\n    title: 'Композиция Романтик',\n    img: 'choco8.jfif',\n    desc: '',\n    category: '',\n    price: '7990'\n  }, {\n    id: 9,\n    title: 'Композиция Полярные Сны',\n    img: 'choco9.jfif',\n    desc: '',\n    category: '',\n    price: '19000'\n  }, {\n    id: 10,\n    title: 'Композиция Эльда',\n    img: 'choco10.jfif',\n    desc: '',\n    category: '',\n    price: '13000'\n  }, {\n    id: 11,\n    title: 'Композиция Одно Желание',\n    img: 'choco11.jfif',\n    desc: '',\n    category: '',\n    price: '8000'\n  }, {\n    id: 12,\n    title: 'Композиция Клубничная Мелодия',\n    img: 'choco12.jfif',\n    desc: '',\n    category: '',\n    price: '10990'\n  }, {\n    id: 13,\n    title: 'Композиция Нежное Сердце',\n    img: 'choco13.jfif',\n    desc: '',\n    category: '',\n    price: '24990'\n  }, {\n    id: 14,\n    title: 'Композиция Ферроль',\n    img: 'choco14.jfif',\n    desc: '',\n    category: '',\n    price: '12000'\n  }, {\n    id: 15,\n    title: 'Композиция Мелита',\n    img: 'choco15.jfif',\n    desc: '',\n    category: '',\n    price: '7990'\n  }]);\n  //используется для обновления имени пользователя при вводе данных в соответствующее текстовое поле.\n  const onNameChange = e => {\n    setNameUser(e.target.value);\n  };\n  //такое использование позволяет сигнализировать о том, что отправка имени завершена или форма была отправлена.\n  const nameSubmitForm = () => {\n    setNameSubmit(true);\n  };\n  const deleteOrder = id => {\n    setOrders(orders.filter(el => el.id !== id));\n  };\n  const addToOrder = item => {\n    let isInArray = false;\n    orders.forEach(el => {\n      if (el.id === item.id) {\n        isInArray = true;\n      }\n    });\n    if (!isInArray) {\n      setOrders([...orders, item]);\n    }\n  };\n\n  //Этот код позволяет переключаться между двумя состояниями интерфейса: \n  //одно состояние отображает чат с сообщениями, \n  //а другое - форму для ввода имени пользователя перед входом в чат\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      orders: orders,\n      onDelete: deleteOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Items, {\n      items: items,\n      onAdd: addToOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), nameSubmit ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg1 p-3 box-header\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-weight-bold text-white mb-0\",\n          children: nameUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-2 box-content\",\n        children: renderChat()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onMessageSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pl-2 pt-2 box-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-input\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => onContentChange(e),\n              value: state.message,\n              name: \"message\",\n              placeholder: \"Please a reply\",\n              className: \"bg2 pl-2 input-text\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-2 box-button\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg1 text-center reply-button\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-paper-plane text-white button-icon\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: nameSubmitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"name\",\n          onChange: e => onNameChange(e),\n          value: nameUser.name,\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\u0427\\u0430\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dJ4ElcuTZzd+2yy2pGbsf53SeR4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Header","Footer","Items","jsxDEV","_jsxDEV","App","_s","state","setState","message","name","nameSubmit","setNameSubmit","nameUser","setNameUser","chat","setChat","socketRef","current","connect","on","disconnect","onContentChange","e","getNameUser","console","log","target","value","onMessageSubmit","emit","preventDefault","renderChat","map","index","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","clear","orders","setOrders","items","id","title","img","desc","category","price","onNameChange","nameSubmitForm","deleteOrder","filter","el","addToOrder","item","isInArray","forEach","onDelete","onAdd","onSubmit","onChange","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/Raim/Desktop/Shop/client/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport io from \"socket.io-client\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Items from './components/Items'\n\nfunction App() {\n  //useState: Отвечает за создание и управление состоянием компонента.\n  //useRef: Создает изменяемый объект, который может использоваться для сохранения и обращения к изменяемому значению\n  //useEffect- это способ сказать компоненту: \"Когда что-то произойдет (например, компонент загрузится, обновится или удалится), сделай это.\" То, что \"это\" означает, может быть чем угодно: загрузка данных, изменение состояния\n  //Создает состояние state с начальным значением объекта\n  //setState - функция для обновления этого состояния. Обычно используется для хранения данных формы или информации, связанной с компонентом.\n  const [ state, setState ] = useState({ message: \"\", name: \"\" })\n  //false показывает, что процесс отправки имени еще не начат\n  const [nameSubmit, setNameSubmit] = useState(false)\n  //используется для хранения значения имени пользователя\n  const [nameUser, setNameUser]=useState(\"\")\n  //используется для хранения сообщений чата\n  const [ chat, setChat ] = useState([])\n  //используется для сохранения ссылки на объект, который нужно сохранить между рендерами компонента (например, объекта сокета для взаимодействия с сервером).\n  const socketRef = useRef()\n\n  // для установки соединения с сокетом и прослушивания события \"message\" с помощью библиотеки Socket.IO \n  useEffect(\n\t\t() => {\n\t\t\tsocketRef.current = io.connect(\"http://localhost:4000\")\n      //Устанавливает слушатель события \"message\"\n      //и добавляет новое сообщение в массив чата.\n\t\t\tsocketRef.current.on(\"message\", ({ name, message }) => {\n\t\t\t\tsetChat([ ...chat, { name, message } ])\n\t\t\t})\n      //при вызове этой функции происходит отключение текущего сокета.\n\t\t\treturn () => socketRef.current.disconnect()\n\t\t},\n    // реагирует на изменения состояния chat \n\t\t[ chat ]\n\t)\n\n  const onContentChange =(e) =>{\n    //Создается локальная переменная getNameUser, которая получает значение из переменной состояния nameUser\n    const getNameUser =nameUser;\n    //Выводит в консоль значение, введенное пользователем в элемент, который вызвал событие e.\n    console.log(e.target.value)\n    //Используется функция setState для обновления состояния. \n    setState({ ...state, name: getNameUser , message: e.target.value })\n    //Выводит в консоль объект состояния state после его обновления\n    console.log(state)\n  }\n\n  const onMessageSubmit = (e) => {\n    //Деструктурирует объект состояния state, извлекая из него значения name и message. Это позволяет использовать их без прямого обращения к state.name и state.message.\n\t\tconst { name, message } = state\n    //Отправляет сообщение через сокет (socketRef.current) на сервер, используя событие \"message\".\n\t\tsocketRef.current.emit(\"message\", { name, message })\n    //Вместо отправки данных или перехода по ссылке страница остается без изменений\n\t\te.preventDefault()\n    //Обновляет состояние state\n\t\tsetState({ message: \"\", name })\n    console.log(state)\n\t}\n  //формирует интерфейс чата, отображая сообщения в соответствии с отправителем, \n  //выравнивая их по левому или правому краю в зависимости от того, от кого сообщение пришло.\n\tconst renderChat = () => {\n    // Каждый элемент массива содержит сообщение чата и его отправителя.\n\t\treturn chat.map(({ name, message }, index) => (\n      // тернарный оператор, который проверяет, совпадает ли имя отправителя сообщения с именем пользователя (nameUser).\n       nameUser == name ? (\n        <div>\n        <div className=\"bg1 mb-2 p-2 float-right box-messenger\">\n          <p className=\"mb-0 text-messenger text-white\">{message} </p>\n        </div>\n        <div style={{clear: 'both'}} />\n      </div>\n       ):(\n        <div>\n        <div className=\"bg2 mb-2 p-2 float-left box-messenger\">\n          <p className=\"mb-0 text-messenger\">{message}</p>\n        </div>\n        <div style={{clear: 'both'}} />\n      </div>\n       )\n\t\t\t\n\t\t))\n\t}\n\n  const [orders, setOrders] = useState([]);\n  const [items] = useState([\n        {\n          id: 1,\n          title: 'Композиция Desire Me',\n          img: 'choco1.jfif',\n          desc: '',\n          category: '',\n          price: '15500'\n        },\n        {\n          id: 2,\n          title: 'Композиция Бланш',\n          img: 'choco2.jfif',\n          desc: '',\n          category: '',\n          price: '8990'\n        },\n        {\n          id: 3,\n          title: 'Композиция Шоколадный Прованс',\n          img: 'choco3.jfif',\n          desc: '',\n          category: '',\n          price: '6990'\n        },\n        {\n          id: 4,\n          title: 'Композиция Красота Любви',\n          img: 'choco4.jfif',\n          desc: '',\n          category: '',\n          price: '11000'\n        },\n        {\n          id: 5,\n          title: 'Композиция Вдохновение',\n          img: 'choco5.jfif',\n          desc: '',\n          category: '',\n          price: '5990'\n        },\n        {\n          id: 6,\n          title: 'Композиция Клубничный Сюрприз',\n          img: 'choco6.jfif',\n          desc: '',\n          category: '',\n          price: '8000'\n        },\n        {\n          id: 7,\n          title: 'Композиция Вояж',\n          img: 'choco7.jfif',\n          desc: '',\n          category: '',\n          price: '11990'\n        },\n        {\n          id: 8,\n          title: 'Композиция Романтик',\n          img: 'choco8.jfif',\n          desc: '',\n          category: '',\n          price: '7990'\n        },\n        {\n          id: 9,\n          title: 'Композиция Полярные Сны',\n          img: 'choco9.jfif',\n          desc: '',\n          category: '',\n          price: '19000'\n        },\n        {\n          id: 10,\n          title: 'Композиция Эльда',\n          img: 'choco10.jfif',\n          desc: '',\n          category: '',\n          price: '13000'\n        },\n        {\n          id: 11,\n          title: 'Композиция Одно Желание',\n          img: 'choco11.jfif',\n          desc: '',\n          category: '',\n          price: '8000'\n        },\n        {\n          id: 12,\n          title: 'Композиция Клубничная Мелодия',\n          img: 'choco12.jfif',\n          desc: '',\n          category: '',\n          price: '10990'\n        },\n        {\n          id: 13,\n          title: 'Композиция Нежное Сердце',\n          img: 'choco13.jfif',\n          desc: '',\n          category: '',\n          price: '24990'\n        },\n        {\n          id: 14,\n          title: 'Композиция Ферроль',\n          img: 'choco14.jfif',\n          desc: '',\n          category: '',\n          price: '12000'\n        },\n        {\n          id: 15,\n          title: 'Композиция Мелита',\n          img: 'choco15.jfif',\n          desc: '',\n          category: '',\n          price: '7990'\n        },\n      ]);\n      //используется для обновления имени пользователя при вводе данных в соответствующее текстовое поле.\n      const onNameChange = (e) =>{\n        setNameUser(e.target.value)\n      }\n      //такое использование позволяет сигнализировать о том, что отправка имени завершена или форма была отправлена.\n      const nameSubmitForm =()=>{\n        setNameSubmit(true)\n      }\n\n  const deleteOrder = (id) => {\n    setOrders(orders.filter(el => el.id !== id));\n  }\n\n  const addToOrder = (item) => {\n    let isInArray = false;\n    orders.forEach(el => {\n      if (el.id === item.id) {\n        isInArray = true;\n      }\n    });\n    if (!isInArray) {\n      setOrders([...orders, item]);\n    }\n  }\n\n  //Этот код позволяет переключаться между двумя состояниями интерфейса: \n  //одно состояние отображает чат с сообщениями, \n  //а другое - форму для ввода имени пользователя перед входом в чат\n  return (\n    <div className=\"wrapper\">\n      <Header orders={orders} onDelete={deleteOrder}/>\n      <Items items={items} onAdd={addToOrder}/>\n      { nameSubmit ? (\n      <div className=\"box-main\">\n    <div className=\"bg1 p-3 box-header\">\n      <p className=\"font-weight-bold text-white mb-0\">{nameUser}</p>\n    </div>\n    <div className=\"p-2 box-content\">\n    {renderChat()}\n    </div>\n    <form onSubmit={onMessageSubmit}>\n    <div className=\"pl-2 pt-2 box-bottom\">\n    \n      <div className=\"box-input\">\n        <input onChange={(e) => onContentChange(e)} value={state.message} name=\"message\"\n            placeholder=\"Please a reply\" \n            className=\"bg2 pl-2 input-text\" \n            type=\"text\" />\n      </div>\n      <div className=\"px-2 box-button\">\n        <button className=\"bg1 text-center reply-button\">\n          <i className=\"fa fa-paper-plane text-white button-icon\" aria-hidden=\"true\" />\n        </button>\n      </div>\n    </div>\n    </form>\n  </div>\n    ):(\n      <div className=\"form-container\">\n      <form onSubmit={nameSubmitForm}>\n        <input \n          name=\"name\" \n          onChange={(e) => onNameChange(e)} \n          value={nameUser.name} \n          placeholder=\"Введите имя\" \n        />\n        <button type=\"submit\">Чат</button>\n      </form>\n    </div>\n    )\n   }\n      <Footer />\n    </div>\n  );\n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}